%{
	#include <stdio.h>
	#include "global.h"
	extern int tokenval;
	extern void yyerror(char*);
%}

%token NUM ID DIV MOD DONE

%%

list : expr ';' list
	 | assignment ';' list
	 | /*empty*/
 	 ;
assignment : ID { printf("%s\n", symtable[tokenval].lexptr); } '=' expr { printf("="); } ;
expr : term moreterms ;
moreterms : '+' term { printf("+\n"); } moreterms
		  | '-' term { printf("-\n"); } moreterms
		  | /*empty*/
		  ;
term : factor morefactors ;
morefactors : '*' factor { printf("*\n"); } morefactors
		  	| '/' factor { printf("/\n"); } morefactors
			| DIV factor { printf("DIV\n"); } morefactors
			| MOD factor { printf("MOD\n"); } morefactors
			| /*empty*/
factor : '(' expr ')'
	   | ID { printf("%s\n", symtable[tokenval].lexptr); }
	   | NUM { printf("%d\n", tokenval); }
	   ;

%%

void yyerror(char *msg)
{
	printf("Syntax Error: %s\n", msg);
}

int yylex(void)
{
	return lexan();
}

void parse()
{
	yyparse();
}
